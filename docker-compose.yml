version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: lipi-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: lipi-medical
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - lipi-network
    command: --auth

  lipi-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: lipi-medical-app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/lipi-medical?authSource=admin
    volumes:
      - uploads:/app/uploads
    depends_on:
      - mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - lipi-network

  # Optional: Add a reverse proxy (nginx) for production
  nginx:
    image: nginx:alpine
    container_name: lipi-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - lipi-app
    restart: unless-stopped
    networks:
      - lipi-network
    profiles:
      - production

volumes:
  uploads:
    driver: local
  mongodb_data:
    driver: local

networks:
  lipi-network:
    driver: bridge